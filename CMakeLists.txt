cmake_minimum_required(VERSION 3.12)
project(scapula NONE)

# Import CMake Modules
include(ExternalProject)

# Initialize top-level super build project
include(${CMAKE_SOURCE_DIR}/scripts/cmake/init_project.cmake)

# Download and build dependencies
include(${SCAPULA_SOURCE_DEPENDS_DIR}/dtc.cmake)
include(${SCAPULA_SOURCE_DEPENDS_DIR}/libfdt.cmake)
include(${SCAPULA_SOURCE_DEPENDS_DIR}/meson.cmake)
include(${SCAPULA_SOURCE_DEPENDS_DIR}/libc.cmake)
include(${SCAPULA_SOURCE_DEPENDS_DIR}/libmemory.cmake)
include(${SCAPULA_SOURCE_DEPENDS_DIR}/xml_specs.cmake)
include(${SCAPULA_SOURCE_DEPENDS_DIR}/shoulder.cmake)

# Generate testcase source code
add_subproject(
    scapula
    DEPENDS shoulder
    DEPENDS sysreg_spec
    DEPENDS a64_spec
    DEPENDS a32_spec
    SOURCE_DIR ${SCAPULA_SOURCE_ROOT_DIR}/scapula
)

# Build the Scapula OS testcase runtime environment
add_subproject(
    scapula_os
    DEPENDS dtc
    DEPENDS libfdt
    DEPENDS shoulder
    DEPENDS scapula
    DEPENDS meson
    DEPENDS libc
    DEPENDS libmemory
    SOURCE_DIR ${CMAKE_CURRENT_LIST_DIR}/scapula_os/src
    TOOLCHAIN ${SCAPULA_SOURCE_CMAKE_DIR}/toolchain/aarch64-linux-gnu-gcc.cmake
)

# Build aarch32 testcases that were generated by scapula
add_subproject(
    aarch32_testcases
    DEPENDS scapula_os
    DEPENDS scapula
    SOURCE_DIR ${SCAPULA_SOURCE_ROOT_DIR}/scripts/cmake/build_generated/aarch32
    TOOLCHAIN ${SCAPULA_SOURCE_CMAKE_DIR}/toolchain/arm-linux-gnueabihf-gcc.cmake
)

# Build aarch64 testcases that were generated by scapula
add_subproject(
    aarch64_testcases
    DEPENDS scapula_os
    DEPENDS scapula
    SOURCE_DIR ${SCAPULA_SOURCE_ROOT_DIR}/scripts/cmake/build_generated/aarch64
    TOOLCHAIN ${SCAPULA_SOURCE_CMAKE_DIR}/toolchain/aarch64-linux-gnu-gcc.cmake
)

# Bundle up all of the above into a deployable image(s)
add_subproject(
    images
    DEPENDS scapula
    DEPENDS aarch32_testcases
    DEPENDS aarch64_testcases
    SOURCE_DIR ${SCAPULA_SOURCE_ROOT_DIR}/scripts/cmake/build_generated/images
    TOOLCHAIN ${SCAPULA_SOURCE_CMAKE_DIR}/toolchain/aarch64-linux-gnu-gcc.cmake
)

print_banner()
print_usage()
