# MIT License
#
# Copyright (c) 2018 Bareflank
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

include(${CMAKE_CURRENT_LIST_DIR}/scripts/cmake/config/default.cmake)
include(${SCAPULA_SOURCE_CMAKE_DIR}/validate.cmake)
include(${SCAPULA_SOURCE_CMAKE_DIR}/targets.cmake)

include_dependency(SCAPULA_SOURCE_DEPENDS_DIR dtc)
include_dependency(SCAPULA_SOURCE_DEPENDS_DIR libfdt)
include_dependency(SCAPULA_SOURCE_DEPENDS_DIR meson)
include_dependency(SCAPULA_SOURCE_DEPENDS_DIR libc)
include_dependency(SCAPULA_SOURCE_DEPENDS_DIR libmemory)

# Generate intrinsics
add_subproject(
    shoulder vmm
    SOURCE_DIR ${SHOULDER_SOURCE_DIR}
)

# Generate testcases
add_subproject(
    scapula vmm
    DEPENDS shoulder
    SOURCE_DIR ${SCAPULA_SOURCE_ROOT_DIR}/scapula
)

# Build the bootloader/scapula OS testcase runtime environment
add_subproject(
    bootloader vmm
    DEPENDS dtc
    DEPENDS libfdt
    DEPENDS shoulder
    DEPENDS scapula
    DEPENDS meson
    DEPENDS libc
    DEPENDS libmemory
    SOURCE_DIR ${CMAKE_CURRENT_LIST_DIR}/bootloader/src
    TOOLCHAIN ${SOURCE_TOOLCHAIN_DIR}/gcc_aarch64_vmm.cmake
)

# Build aarch32 testcases that were generated by scapula
add_subproject(
    aarch32_testcases vmm
    DEPENDS bootloader
    DEPENDS scapula
    SOURCE_DIR ${SCAPULA_SOURCE_ROOT_DIR}/scripts/cmake/build_generated/aarch32
    TOOLCHAIN ${SOURCE_TOOLCHAIN_DIR}/gcc_aarch32_vmm.cmake
)

# Build aarch64 testcases that were generated by scapula
add_subproject(
    aarch64_testcases vmm
    DEPENDS bootloader
    DEPENDS scapula
    SOURCE_DIR ${SCAPULA_SOURCE_ROOT_DIR}/scripts/cmake/build_generated/aarch64
    TOOLCHAIN ${SOURCE_TOOLCHAIN_DIR}/gcc_aarch64_vmm.cmake
)

# Bundle up all of the above into a deployable image(s)
add_subproject(
    images vmm
    DEPENDS scapula
    DEPENDS aarch32_testcases
    DEPENDS aarch64_testcases
    SOURCE_DIR ${SCAPULA_SOURCE_ROOT_DIR}/scripts/cmake/build_generated/images
    TOOLCHAIN ${SOURCE_TOOLCHAIN_DIR}/gcc_aarch64_vmm.cmake
)
